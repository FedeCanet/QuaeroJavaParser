package java_quaero.parser;

import java.io.*;
import java.util.*;
import java_cup.runtime.Symbol; 
import java_quaero.ast.*;

parser code {:
	
	public static Lexer makeLexer(String input) throws Exception {
		return new Lexer(new StringReader(input));
	}
	
	public static Parser makeParser(String input) throws Exception {
		return new Parser(makeLexer(input));
	}
	
	public static Object parseString(String input) throws Exception {
		Parser parser = Parser.makeParser(input);
		Symbol result = parser.parse();
		return result.value;
	}
:}

// Rules

terminal String ID, STRING;
terminal Double NUM;
terminal Boolean BOOL; 
non terminal QuaeroObject ini, objectq;
non terminal Value value;
non terminal String key;
terminal PARI, PARD, COLON, COMMA;

ini ::= ID:id PARI objectq:obj PARD {: RESULT = obj; obj.setTag(id); :}
	;

objectq ::= key:key COLON value:val {: RESULT = new QuaeroObject(); RESULT.put(key, val); :}
	| ini:list {: RESULT = new QuaeroObject(); RESULT.getObjectList().add(list); :}
	| key:key COLON value:val COMMA objectq:obj {: RESULT = obj; obj.put(key, val); :}
	| ini:list COMMA objectq:obj {: RESULT = obj; RESULT.getObjectList().add(list); :}
	;
	
value ::= STRING:str {: RESULT = new QuaeroString(str); :}
	| NUM:num {: RESULT = new QuaeroDouble(num); :}
	| BOOL:bool {: RESULT = new QuaeroBoolean(bool); :}
	;
	
key ::= ID:id {: RESULT = id; :};





 
 
 
  